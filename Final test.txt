blade.php

<form name="loginform" id="loginform" >
    @csrf
    <div>
        <label>Email Address <span>*</span> </label>
        <input id="loginemail" name="email" type="text"  onClick="this.select()">
    </div>
    <div>
        <label >Password <span>*</span> </label>
        <input id="loginpassword" name="password"  type="password" onClick="this.select()">
    </div>
    <button type="button" id="loginformbutton" > Log In </button>
    
</form>


<form  name="registerform"  id="register-form2" >
    @csrf
    <div>
        <label >Full Name <span>*</span> </label>
        <input id="name" name="name" type="text"   onClick="this.select()" value="">
    </div>
    <div>
        <label>Email Address <span>*</span></label>
        <input id="email" name="email" type="text"  onClick="this.select()" value="">
    </div>
    <div>
        <label >Password <span>*</span></label>
        <input id="password" name="password" type="password"   onClick="this.select()" value="" >
    </div>
    
    <button type="button"  id="register-button"> Register  </button>
</form>

Web.php

Route::get('/home','FrontController@index')->name('login');
Route::post('/register','LoginController@registerSave')->name('register.save');
Route::post('/login','LoginController@loginCheck')->name('front.login.check');

controller:

public function index()
    {
        return view('front', $data);
    }

    public function registerSave(Request $request) {
        $this->validate($request,[
            'name' => 'required',
            'email' => 'required',
            'password' => 'required'
        ]);

        $user = new User;
        $user->name = $request->name;
        $user->email = $request->email;
        $user->password = Hash::make($request->password);

        $user-> save();

    }

    public function loginCheck(Request $request){
        $this->validate($request,[
            'email' => 'required',
            'password' => 'required'
        ]);
        $credentials = $request->only('email', 'password');

    }
 

Product :-

Model:-
class Product extends Model
{

    protected $fillable = [
        'id', 'name', 'price','upc','status','image'
    ];

migrations:-

public function up()
    {
        Schema::create('products', function (Blueprint $table) {
            $table->id();
            $table->string('name', 100)->nullable()->index();
            $table->integer('price', 100)->nullable();
            $table->integer('UPC', 100)->nullable();
            $table->string('Status', 100)->nullable();
            $table->string('image', 100)->nullable();

           
        });
    }

    
    public function down()
    {
        Schema::dropIfExists('products');
    }
}


controller:-

public function productSave(Request $request){
        $this ->validate($request,[
            'name' => 'required',
        ]);

        $product = new Product();
        $product->name = $request->name;
        $product->Price = $request->price;
        $product->upc = $request->upc;
        $product->status = $request->status;
        $product->image= $request-image;
        $product->created_by = auth()->id();
        $product-> save();

        return redirect()->route('product.image.view', $product->id);
    }


web.php:-
Route::group(['middleware'=>['auth']], function () {
    Route::get('/logout','LoginController@logout')->name('front.logout');
    Route::get('/product/add','ProductController@index')
});
